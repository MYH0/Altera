//--------------------------------------------------
//  
//  Verilog code generated by Visual HDL
//
//  Design Unit:
//      Target
//         HDL        :  Verilog
//         Purpose    :  Synthesis
//         Vendor     :  Design Compiler
//  
//      Style
//         Use tasks                      :  No
//         Code Destination               :  Combined file
//         Attach Directives              :  Yes
//         Structural                     :  No
//         Free text style                :  / / ...
//         Preserve spacing for free text :  Yes
//         Sort Ports by mode             :  No
//         Declaration alignment          :  No
//         New line for each Port         :  No
//         Attach comment to Port         :  No
//
//////////////////////////////////////////
//////////////////////////////////////////
module  CPU_BUS (
               RESET,
               FSMC_ADD, 
               FSMC_nCS, 
               FSMC_NOE, 
               FSMC_NWE, 
               FSMC_DATAIN, 
               FSMC_DATAOUT,
			   CLK_IN
               );
   input RESET;wire RESET;
   input [3:0] FSMC_ADD ;     wire[3:0]   FSMC_ADD ;
   input       FSMC_nCS ;     wire    FSMC_nCS ;
   input[1:0] FSMC_NOE ;      wire[1:0] FSMC_NOE ;               
   input FSMC_NWE ;           wire FSMC_NWE ;                 
   input[7:0]  FSMC_DATAIN  ; wire [7:0] FSMC_DATAIN ;
   output[7:0] FSMC_DATAOUT ; reg[7:0]   FSMC_DATAOUT ;
   input  CLK_IN;             wire CLK_IN;
//**********************************************************************************************************
reg[7:0] R1;
reg[7:0] R2;
reg[7:0] R3;
always @(posedge CLK_IN or negedge RESET)
    begin 
        if(!RESET) begin 
          R1<=0;
		  R2<=0;
		  R3<=0;
        end 
        else begin 
	        if (!FSMC_nCS  &&  !FSMC_NWE) begin 
                case(FSMC_ADD) 
                   4'h0 :  begin R1<=FSMC_DATAIN;    end
                   4'h1 :  begin R2<=FSMC_DATAIN;    end
                   4'h2 :  begin R3<=FSMC_DATAIN;    end
                   default: begin  R1<=0;R2<=0;R3<=0;end 
                endcase 
			end 
			else begin 
                if(FSMC_NOE==2'b01) begin 
				    R1<=R1;
		            R3<=R1;
			    end 
				else if(FSMC_NOE==2'b10) begin 
		            R2<=R2;
		            R3<=R2;
					R1<=R3;
				end
                else if(FSMC_NOE==2'b11)begin 
                    R2<=R3;
                end  
				else begin 
					R1<=R1;
		            R2<=R2;
		            R3<=R3;
				end 
            end
       end 
    end 
endmodule

