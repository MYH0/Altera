module advance_full_adder_4bit
	(
		input [3:0] num_1,
		input [3:0] num_2,
		output reg [3:0] s,
		output reg CF
   );

	reg [3:0] P;
	reg [3:0] G;

	integer i;

	always @ (*)
	  begin
			for(i=0; i<4; i=i+1)
				begin
					G[i] = num_1[i]&num_2[i];
					P[i] = num_1[i]^num_2[i];	 
				end

			s[0] = P[0];
			s[1] = P[1]^G[0];
			s[2] = P[2]^(G[1]|P[1]&G[0]);
			s[3] = P[3]^(G[2]|(P[2]&G[1])|(P[2]&P[1]&G[0]));
			CF = G[3]|(P[3]&G[2])|(P[3]&P[2]&G[1])|(P[3]&P[2]&P[1]&G[0]);
	  end
  
endmodule